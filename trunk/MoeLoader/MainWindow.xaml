<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:MoeLoader"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	x:Class="MoeLoader.MainWindow"
	x:Name="Window"
	Title="Moe Loader"
    Loaded="Window_Loaded"
    PreviewKeyDown="Window_KeyDown"
    MouseDown="Window_MouseDown_1"
    MouseDoubleClick="Window_MouseDoubleClick_1"
    WindowStyle="None"
    StateChanged="Window_StateChanged_1"
    AllowsTransparency="True"
    ResizeMode="CanResizeWithGrip"
    Activated="Window_Activated_1"
    Deactivated="Window_Deactivated_1"
	Width="900" Height="640" mc:Ignorable="d" WindowStartupLocation="CenterScreen" 
    MinWidth="700" MinHeight="400" Closed="Window_Closed" WindowState="Normal" Closing="Window_Closing">
    <Window.Resources>
        <Style TargetType="{x:Type local:MainWindow}">
            <!--<Setter Property="shell:WindowChrome.WindowChrome">
                <Setter.Value>
                    <shell:WindowChrome GlassFrameThickness="-1" CaptionHeight="100" ResizeBorderThickness="8"/>
                </Setter.Value>
            </Setter>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:MainWindow}">
                        <Grid>
                            <Rectangle x:Name="shadowN" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="6">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="#003585e4" Offset="0"/>
                                        <GradientStop Color="#663585e4" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="shadowS" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="6">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
                                        <GradientStop Color="#003585e4" Offset="0"/>
                                        <GradientStop Color="#663585e4" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="shadowE" HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="6">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="1,0.5" EndPoint="0,0.5">
                                        <GradientStop Color="#003585e4" Offset="0"/>
                                        <GradientStop Color="#663585e4" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="shadowW" HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="6">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                        <GradientStop Color="#003585e4" Offset="0"/>
                                        <GradientStop Color="#663585e4" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter x:Name="contentWnd" Margin="6" Content="{TemplateBinding Content}" SizeChanged="contentWnd_SizeChanged_1" />
                            <ResizeGrip Visibility="Visible" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,7,7" Opacity="0.6" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DrawingBrush x:Key="maxB" Viewbox="0,0,34,26" ViewboxUnits="Absolute">
            <DrawingBrush.Drawing>
                <ImageDrawing Rect="0,0,34,26">
                    <ImageDrawing.ImageSource>
                        <BitmapImage CacheOption="OnLoad" CreateOptions="IgnoreImageCache" UriSource="/Images/max.png"/>
                    </ImageDrawing.ImageSource>
                </ImageDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <DrawingBrush x:Key="restoreB" Viewbox="0,0,34,26" ViewboxUnits="Absolute">
            <DrawingBrush.Drawing>
                <ImageDrawing Rect="0,0,34,26">
                    <ImageDrawing.ImageSource>
                        <BitmapImage CacheOption="OnLoad" CreateOptions="IgnoreImageCache" UriSource="/Images/restore.png"/>
                    </ImageDrawing.ImageSource>
                </ImageDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <Style x:Key="min" TargetType="{x:Type Rectangle}">
            <Setter Property="IsHitTestVisible" Value="False" />
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Width" Value="34"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Margin" Value="0,0,68,0" />
            <Setter Property="Rectangle.Fill">
                <Setter.Value>
                    <DrawingBrush Viewbox="0,0,34,26" ViewboxUnits="Absolute">
                        <DrawingBrush.Drawing>
                            <ImageDrawing Rect="0,0,34,26">
                                <ImageDrawing.ImageSource>
                                    <BitmapImage CacheOption="OnLoad" CreateOptions="IgnoreImageCache" UriSource="/Images/min.png"/>
                                </ImageDrawing.ImageSource>
                            </ImageDrawing>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="close" TargetType="{x:Type Rectangle}">
            <Setter Property="IsHitTestVisible" Value="False" />
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Width" Value="34"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Rectangle.Fill">
                <Setter.Value>
                    <DrawingBrush Viewbox="0,0,34,26" ViewboxUnits="Absolute">
                        <DrawingBrush.Drawing>
                            <ImageDrawing Rect="0,0,34,26">
                                <ImageDrawing.ImageSource>
                                    <BitmapImage CacheOption="OnLoad" CreateOptions="IgnoreImageCache" UriSource="/Images/close.png"/>
                                </ImageDrawing.ImageSource>
                            </ImageDrawing>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="max" TargetType="{x:Type Rectangle}">
            <Setter Property="IsHitTestVisible" Value="False" />
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Width" Value="34"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Margin" Value="0,0,34,0" />
        </Style>
        <Style x:Key="sysbtn" TargetType="{x:Type Button}">
            <!--<Setter Property="BorderThickness" Value="0"/>-->
            <!--<Setter Property="Background" Value="#efeff2"/>-->
            <Setter Property="Width" Value="34"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="back" Background="Transparent"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="back" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="back" Value="#ee3585e4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="#00FFFFFF" SnapsToDevicePixels="False" HorizontalAlignment="Stretch" Margin="0" Width="Auto" Height="Auto" VerticalAlignment="Stretch">
                                <Ellipse x:Name ="BackGrad" Height="19" Width="19" HorizontalAlignment="Center" VerticalAlignment ="Center" StrokeThickness="1" Stroke ="#FF3585E4" Fill="#CC3585e4" Margin="0"/>
                                <Ellipse Height="19" Width="19" HorizontalAlignment="Center" VerticalAlignment ="Center" Stroke ="Transparent"  x:Name ="FadeMask" StrokeThickness="1" Opacity ="0" Fill="AliceBlue" Margin="0"/>
                                <Path Stroke="White" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="arrow" SnapsToDevicePixels="False" Data="M1,1.5 L4.5,5 8,1.5" Margin="0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Ellipse Height="19" Width="19" HorizontalAlignment="Center" VerticalAlignment ="Center" x:Name ="Highlight" StrokeThickness ="2" Stroke ="Transparent" Margin="0" Visibility="Hidden">
                                    <Ellipse.Fill>
                                        <DrawingBrush>
                                            <DrawingBrush.Drawing>
                                                <GeometryDrawing>
                                                    <GeometryDrawing.Brush>
                                                        <LinearGradientBrush Opacity ="0.6" StartPoint ="0,0" EndPoint ="0,1">
                                                            <GradientStop Color ="White" Offset ="0"/>
                                                            <GradientStop Color ="#CCFFFFFF" Offset ="1"/>
                                                        </LinearGradientBrush>
                                                    </GeometryDrawing.Brush>
                                                    <GeometryDrawing.Geometry>
                                                        <EllipseGeometry Center ="0.5,0.5" RadiusX ="0.25" RadiusY ="0.5"/>
                                                    </GeometryDrawing.Geometry>
                                                </GeometryDrawing>
                                            </DrawingBrush.Drawing>
                                            <DrawingBrush.RelativeTransform>
                                                <ScaleTransform CenterX ="0.5" CenterY ="0" ScaleX ="1.05" ScaleY ="0.6"/>
                                            </DrawingBrush.RelativeTransform>
                                        </DrawingBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <ContentPresenter x:Name="ContentSite" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" Content="{TemplateBinding Content}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="arrow">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property ="IsPressed" Value ="True">
                                <Setter TargetName ="BackGrad"  Property ="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform X ="0" Y ="1"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <EventTrigger RoutedEvent ="UIElement.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="FadeMask" Storyboard.TargetProperty ="Opacity" To ="0.4" Duration ="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent ="UIElement.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="FadeMask" Storyboard.TargetProperty ="Opacity" To ="0" Duration ="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Storyboard x:Key="logoRotate" RepeatBehavior="Forever">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="bgLoading" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <SplineThicknessKeyFrame KeyTime="00:00:3" Value="1920,71,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="showDownload">
            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="imgBorder" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <SplineThicknessKeyFrame KeyTime="00:00:00.3" Value="0,0,222,0"/>
            </ThicknessAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="toggleDownload" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <SplineThicknessKeyFrame KeyTime="00:00:00.3" Value="0,0,220,0"/>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="downloadC" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="downloadC" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="219"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.2"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="toggleDownload">
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="-1.2"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="closeDownload">
            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="imgBorder" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <SplineThicknessKeyFrame KeyTime="00:00:00.3" Value="0,0,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="toggleDownload" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <SplineThicknessKeyFrame KeyTime="00:00:00.3" Value="0,0,-2,0"/>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="downloadC" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="downloadC" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.2"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="toggleDownload">
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1.2"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="showParam">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grdParam" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="479"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grdParam" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <!--<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnGetB" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <SplineThicknessKeyFrame KeyTime="00:00:00.3" Value="461,0,0,1"/>
            </ThicknessAnimationUsingKeyFrames>-->
        </Storyboard>
        <Storyboard x:Key="closeParam">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grdParam" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grdParam" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <!--<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="btnGetB" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <SplineThicknessKeyFrame KeyTime="00:00:00.3" Value="40,0,0,1"/>
            </ThicknessAnimationUsingKeyFrames>-->
        </Storyboard>
        <Style x:Key="prestyle" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <!--<Setter Property="VerticalAlignment" Value="Stretch"/>-->
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Margin" Value="0,0,15,0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="back" Background="Transparent" CornerRadius="0,0,0,10" BorderBrush="LightGray" BorderThickness="1,0,0,1">
                            <Border Background="{TemplateBinding Background}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="back" Value="#efeff2"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="back" Value="#ebebeb"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="nextstyle" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <!--<Setter Property="VerticalAlignment" Value="Stretch"/>-->
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Margin" Value="0,0,15,0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="back" Background="Transparent" CornerRadius="10,0,0,0" BorderBrush="LightGray" BorderThickness="1,1,0,0">
                            <Border Background="{TemplateBinding Background}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="back" Value="#efeff2"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="back" Value="#ebebeb"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}" Width="34" Height="30">
                            <Grid Background="#00FFFFFF" SnapsToDevicePixels="False" HorizontalAlignment="Stretch" Margin="0" Width="Auto" Height="Auto" VerticalAlignment="Stretch">
                                <Path x:Name ="BackGrad" Height="13" Width="60" HorizontalAlignment="Center" VerticalAlignment ="Center" Stroke ="#FFA5BAC6" Fill="#CC3585e4" Data="M0,0L30,13 60,0 0,0" Margin="0" RenderTransformOrigin="0.5,0.5" StrokeThickness="0" StrokeLineJoin="Round">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Path Height="13" Width="60" HorizontalAlignment="Center" VerticalAlignment ="Center" Stroke ="Transparent"  x:Name ="FadeMask" StrokeThickness="0" Opacity ="0" Fill="AliceBlue" Data="M0,0L30,13 60,0 0,0" Margin="0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Path Stroke="White" StrokeThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="arrow" SnapsToDevicePixels="False" Data="M0,-1L18.5,10 35,0 0,0" Margin="0" RenderTransformOrigin="0.5,0.5" Fill="#FFA9C8F4">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <ContentPresenter x:Name="ContentSite" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" Content="{TemplateBinding Content}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent ="UIElement.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="FadeMask" Storyboard.TargetProperty ="Opacity" To ="0.4" Duration ="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent ="UIElement.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="FadeMask" Storyboard.TargetProperty ="Opacity" To ="0" Duration ="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="OnMouseEnter1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="rectangle">
                <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OnMouseEnter2">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="txtSetting">
                <SplineColorKeyFrame KeyTime="0:0:0.2" Value="#666666"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OnMouseEnter3">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="txtHelp">
                <SplineColorKeyFrame KeyTime="0:0:0.2" Value="#666666"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>

        <DropShadowEffect x:Key="PopupDropShadow" Color="#01000000" BlurRadius="10" ShadowDepth="2" />
        <Style x:Key="SimpleMenuItem" TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
            <Setter Property="Width" Value="210" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                    <ColumnDefinition Width="14"/>
                                </Grid.ColumnDefinitions>
                                <Image Margin="5,0,4,0" x:Name="Ico" VerticalAlignment="Center" Source="{TemplateBinding Icon}" Width="16" Height="16" />

                                <Grid Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                    <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
                                </Grid>
                                <ContentPresenter Grid.Column="1" x:Name="HeaderHost" RecognizesAccessKey="True" VerticalAlignment="Center" ContentSource="Header" Margin="3"/>
                                <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                    <Path x:Name="ArrowPanelPath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                                </Grid>
                                <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" AllowsTransparency="true" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
                                    <Grid x:Name="SubMenu">
                                        <Border x:Name="SubMenuBorder" Background="{StaticResource WindowBackgroundBrush}" BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="1"/>

                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Margin" Value="0,1,0,1"/>
                                <Setter Property="Padding" Value="6,3,6,3"/>
                                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                                <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Margin" Value="0,1,0,1"/>
                                <Setter Property="Padding" Value="6,3,6,3"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0,2,0,2"/>
                                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                            </Trigger>
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0,2,0,2"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                            </Trigger>
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Ico"/>
                            </Trigger>
                            <!--<Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Ico"/>
                            </Trigger>-->
                            <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
                                <Setter Property="Margin" Value="0,0,8,8" TargetName="SubMenu"/>
                                <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu"/>
                                <Setter Property="Effect" Value="{StaticResource PopupDropShadow}" TargetName="SubMenuBorder"/>
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" Value="#CC1F78D6" TargetName="Border"/>
                                <Setter Property="Foreground" Value="#FFF"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="sbNavi">
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grdNavi">
        		<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grdNavi">
        		<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="grdNavi">
        		<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="200"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.6" Value="0"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="grdNavi">
        		<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="-200"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.6" Value="0"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grdNavi">
        		<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.7" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
        	</DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grdNavi" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <SplineThicknessKeyFrame KeyTime="00:00:0.6" Value="0,-35,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="grdNavi">
        		<DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static HorizontalAlignment.Right}"/>
        	</ObjectAnimationUsingKeyFrames>
        	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="grdNavi">
        		<DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static VerticalAlignment.Top}"/>
        	</ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="showFuncBtns">
            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grdFuncBtns" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <SplineThicknessKeyFrame KeyTime="00:00:00.1" Value="0,0,15,0"/>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grdFuncBtns" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="hideFuncBtns">
            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grdFuncBtns" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <SplineThicknessKeyFrame KeyTime="00:00:00.1" Value="0,0,-200,0"/>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grdFuncBtns" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="sbShowPageBtn">
        	<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="btnPrev">
        		<SplineThicknessKeyFrame KeyTime="0" Value="0,200,15,0"/>
        		<SplineThicknessKeyFrame KeyTime="0:0:0.8" Value="0,0,15,0" KeySpline="0,0,0.5,1"/>
        	</ThicknessAnimationUsingKeyFrames>
        	<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="btnNext">
        		<SplineThicknessKeyFrame KeyTime="0" Value="0,0,15,200"/>
        		<SplineThicknessKeyFrame KeyTime="0:0:0.8" Value="0,0,15,0" KeySpline="0,0,0.5,1"/>
        	</ThicknessAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="btnNext">
        		<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
        		<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1" KeySpline="0,0,0.5,1"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="btnPrev">
        		<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
        		<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1" KeySpline="0,0,0.5,1"/>
        	</DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <!--<EventTrigger RoutedEvent="FocusManager.GotFocus" SourceName="searchControl">
            <BeginStoryboard x:Name="OnSearchGotFocus_BeginStoryboard" Storyboard="{StaticResource OnSearchGotFocus}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="FocusManager.LostFocus" SourceName="searchControl" >
            <BeginStoryboard x:Name="OnSearchLostFocus_BeginStoryboard" Storyboard="{StaticResource OnSearchLostFocus}"/>
        </EventTrigger>-->
        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="rectangle">
            <BeginStoryboard x:Name="OnMouseEnter1_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter1}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="rectangle">
            <StopStoryboard BeginStoryboardName="OnMouseEnter1_BeginStoryboard"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="txtSetting">
            <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="txtSetting">
            <StopStoryboard BeginStoryboardName="OnMouseEnter2_BeginStoryboard"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="txtHelp">
            <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="txtHelp">
            <StopStoryboard BeginStoryboardName="OnMouseEnter3_BeginStoryboard"/>
        </EventTrigger>
    </Window.Triggers>

    <Border x:Name="containerB" Background="#efeff2" BorderBrush="#3585e4" BorderThickness="3">
        <Grid x:Name="grdBg" Background="Transparent">
            <Grid x:Name="grid" Margin="0,0,0,30">
                <Border x:Name="bdDecorate" Margin="0,0,0,0" Width="10" Height="71" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Border.Background>
                        <LinearGradientBrush Opacity ="0.6" StartPoint ="0.5,0" EndPoint ="0.5,1">
                            <GradientStop Color ="#3585e4" Offset ="0"/>
                            <GradientStop Color ="#35b5e4" Offset ="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>

                <Button Style="{StaticResource sysbtn}" Margin="0,0,68,0" Click="Min_Click" />
                <Button Style="{StaticResource sysbtn}" Margin="0,0,34,0" Click="Max_Click" />
                <Button Style="{StaticResource sysbtn}" Margin="0,0,0,0" Click="Close_Click" />
                <Rectangle Style="{StaticResource close}"/>
                <Rectangle x:Name="maxBtn" Style="{DynamicResource max}" Fill="{StaticResource maxB}"/>
                <Rectangle Style="{StaticResource min}"/>
                <Grid Margin="0,35,0,0">
                    <Grid x:Name="imgListGrid" Margin="0,36,0,39">
                        <Border x:Name="imgBorder" BorderBrush="#4C000000" BorderThickness="0" CornerRadius="0" Background="#8FFFFFFF" Margin="0">
                            <Grid x:Name="imgLstBg">
                                <ScrollViewer x:Name="scrList" Margin="0,1,0,1" PanningMode="VerticalOnly" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" ScrollChanged="scrList_ScrollChanged">
                                    <ScrollViewer.ContextMenu>
                                        <ContextMenu MinWidth="160">
                                            <MenuItem x:Name="itmSelectAll" Header="全选(_A)" IsEnabled="False" Click="itmSelectAll_Click"/>
                                            <MenuItem x:Name="itmUnSelectAll" Header="全不选(_C)" IsEnabled="False" Click="itmUnSelectAll_Click"/>
                                            <MenuItem x:Name="itmReload" Header="重试(_R)" IsEnabled="False" Click="itmReload_Click" ToolTip="重试加载失败的缩略图"/>
                                            <Separator/>
                                            <MenuItem x:Name="itmSmallPre" Header="使用小缩略图(_S)" IsCheckable="True" Click="itmSmallPre_Click"/>
                                            <MenuItem Header="图片地址类型(_T)" ToolTip="此设置即时决定导出及下载使用的地址">
                                                <MenuItem x:Name="itmTypeOri" Header="原图(_1)" IsCheckable="True"  ToolTip="使用原图地址(大)" Click="itmTypeOri_Checked"/>
                                                <MenuItem x:Name="itmTypeJpg" Header="JPG格式(_2)" IsCheckable="True"  ToolTip="优先使用图片的JPG格式地址(较大)" Click="itmTypeOri_Checked"/>
                                                <MenuItem x:Name="itmTypePreview" Header="预览图(_3)" IsCheckable="True"  ToolTip="使用预览图地址(较小)" Click="itmTypeOri_Checked"/>
                                                <MenuItem x:Name="itmTypeSmall" Header="缩略图(_4)" IsCheckable="True"  ToolTip="使用缩略图地址(小)" Click="itmTypeOri_Checked"/>
                                            </MenuItem>
                                            <MenuItem Header="图片过滤(_M)">
                                                <MenuItem x:Name="itmMaskScore" Header="过滤指定分数">
                                                    <MenuItem x:Name="itm0" Header="0分(_1)" IsCheckable="True" Checked="itm5_Checked"/>
                                                    <MenuItem x:Name="itm5" Header="5分以下(_2)" IsCheckable="True" Checked="itm5_Checked"/>
                                                    <MenuItem x:Name="itm10" Header="10分以下(_3)" IsCheckable="True" Checked="itm5_Checked"/>
                                                    <MenuItem x:Name="itm20" Header="20分以下(_4)" IsCheckable="True" Checked="itm5_Checked"/>
                                                    <MenuItem x:Name="itm30" Header="30分以下(_5)" IsCheckable="True" Checked="itm5_Checked"/>
                                                </MenuItem>
                                                <MenuItem x:Name="itmMaskRes" Header="过滤指定分辨率">
                                                    <MenuItem x:Name="itmx0" Header="800x600 以下(_1)" IsCheckable="True" Checked="itmx5_Checked"/>
                                                    <MenuItem x:Name="itmx5" Header="1024x768 以下(_2)" IsCheckable="True" Checked="itmx5_Checked"/>
                                                    <MenuItem x:Name="itmx10" Header="1280x720 以下(_3)" IsCheckable="True" Checked="itmx5_Checked"/>
                                                    <MenuItem x:Name="itmx20" Header="1680x1050 以下(_4)" IsCheckable="True" Checked="itmx5_Checked"/>
                                                    <MenuItem x:Name="itmx30" Header="1920x1080 以下(_5)" IsCheckable="True" Checked="itmx5_Checked"/>
                                                    <!--<MenuItem x:Name="itmx40" Header="1920x1080 以下(_6)" IsCheckable="True" Checked="itmx5_Checked"/>-->
                                                </MenuItem>
                                                <Separator/>
                                                <MenuItem x:Name="itmMaskViewed" Header="过滤已浏览的图片(_0)" IsCheckable="True"/>
                                                <MenuItem x:Name="itmxExplicit" Header="过滤Explicit图片(_E)" IsCheckable="True" IsChecked="False" Click="itmxExplicit_Click"/>
                                            </MenuItem>
                                            <!--<Separator/>-->
                                            <!--<MenuItem x:Name="itmThunder" Header="迅雷(_X)" IsEnabled="False" Click="itmThunder_Click" ToolTip="调用迅雷下载选中的图片"/>-->
                                            <!--<MenuItem x:Name="itmLst" Header="导出下载列表(L)" IsEnabled="False" Click="itmLst_Click" ToolTip="生成选中图片的下载列表文件"/>-->
                                            <!--<Separator/>
                                    <MenuItem x:Name="itmBack" Header="程序设置(_O)" Click="itmSelectAll_Click_1"/>
                                    <MenuItem Header="帮助(_H)">
                                        <MenuItem x:Name="itmHelp" Header="查看帮助(_V)" Click="itmHelp_Click"/>
                                        <MenuItem x:Name="itmAbout" Header="关于(_A)" Click="itmAbout_Click"/>
                                    </MenuItem>-->
                                        </ContextMenu>
                                    </ScrollViewer.ContextMenu>
                                    <WrapPanel x:Name="imgPanel" Margin="20,0,45,0" />
                                </ScrollViewer>
                                <Button x:Name="btnPrev" ToolTip="上一页" IsEnabled="False" VerticalAlignment="Top" Click="btnPrev_Click" Style="{DynamicResource prestyle}">
                                    <Button.Background>
                                        <ImageBrush ImageSource="Images/page.png" Stretch="None" />
                                    </Button.Background>
                                </Button>
                                <Button x:Name="btnNext" ToolTip="下一页" IsEnabled="False" VerticalAlignment="Bottom" Click="btnNext_Click" Style="{DynamicResource nextstyle}" RenderTransformOrigin="0.5,0.5">
                                    <Button.Background>
                                        <ImageBrush ImageSource="Images/page.png" Stretch="None">
                                            <ImageBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleY="-1" ScaleX="1" CenterX="0.5" CenterY="0.5"/>
                                                </TransformGroup>
                                            </ImageBrush.RelativeTransform>
                                        </ImageBrush>
                                    </Button.Background>
                                </Button>
                            </Grid>
                        </Border>
                        <local:DownloadControl x:Name="downloadC" x:FieldModifier="internal" HorizontalAlignment="Right" Width="0" Opacity="0" AllowDrop="True"/>
                        <ToggleButton x:Name="toggleDownload" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,-2,0" ToolTip="显示下载面板(按住Ctrl隐藏缩略图)" Click="toggleDownload_Click" Style="{DynamicResource ToggleButtonStyle1}" RenderTransformOrigin="1,0.5" Width="25" BorderThickness="1,1,1,1">
                            <ToggleButton.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="1.5" ScaleX="1.2"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ToggleButton.RenderTransform>
                        </ToggleButton>
                        <Grid x:Name="grdNavi" Width="385" Height="30" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-10,10,0">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Grid  x:Name="grdSite" HorizontalAlignment="Left" Width="115" VerticalAlignment="Top" Margin="0,0,0,0">
                                <!--<TextBlock Text="站点" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,1,0,0" Style="{StaticResource glowT}"/>-->
                                <Menu HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,0,0" Height="25" BorderBrush="LightGray" BorderThickness="1,1,0,1" >
                                    <MenuItem x:Name="siteMenu" Header="Site" Width="{Binding ElementName=grdSite, Path=ActualWidth}" Background="White" Margin="0" Padding="6,0" Height="25" Style="{StaticResource SimpleMenuItem}" />
                                </Menu>
                                <Grid HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,0,0" Height="23" Width="16" IsHitTestVisible="False">
                                    <!--<Rectangle HorizontalAlignment="Stretch" x:Name="Rectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="0" RadiusY="0" Fill="{StaticResource NormalBrush}" Stroke="{StaticResource NormalBorderBrush}"/>-->
                                    <Path HorizontalAlignment="Right" Margin="0,0,3,0" x:Name="Arrow" VerticalAlignment="Center" Fill="#222222" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                </Grid>
                            </Grid>
                            <local:SearchControl x:Name="searchControl" HorizontalAlignment="Left" Width="200" Height="25" BorderBrush="LightGray" BorderThickness="1,1,1,1" Margin="115,0,0,0" VerticalAlignment="Top" Enteded="searchControl_Entered" />
                            <Button x:Name="btnGet"  Width="60" Height="25" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="314,0,0,0" BorderBrush="LightGray" Background="#EEEEEE" Click="Button_Click" ToolTip="获取图片列表" IsDefault="True">
                                <Grid Width="60" Height="25">
                                <AccessText x:Name="txtGet" Text="获取" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="25,0,0,0"/>
                                <Image x:Name="imgGet" Source="/Images/search.png" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" />
                                </Grid>
                            </Button>
                            <Rectangle x:Name="rectangle" Visibility="Hidden"  HorizontalAlignment="Right" Height="16" VerticalAlignment="Top" Width="16" Margin="0,0,0,0" Stroke="#FF7A7A7A" StrokeThickness="0" ToolTip="访问该站点" MouseLeftButtonUp="rectangle_MouseLeftButtonUp">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="Images/goto.png" Stretch="Uniform"/>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <Grid x:Name="grdFuncBtns" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,-200,0" Opacity="0">
                        <Button Width="85" Height="28" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,0,1" ToolTip="下载选中的图片" Click="Download_Click">
                            <AccessText Text="下载(_D)"/>
                        </Button>
                        <Button Width="85" Height="28" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,105,1" ToolTip="生成选中图片的下载列表文件" Click="itmLst_Click">
                            <AccessText Text="导出列表(_L)"/>
                        </Button>
                    </Grid>

                    <!--<ComboBox x:Name="comboBox1" HorizontalAlignment="Right" VerticalAlignment="Top" Width="160" Style="{StaticResource SimpleComboBox}" Margin="0,1,30,0" SelectionChanged="comboBox1_SelectionChanged" />-->
                    <ToggleButton x:Name="togglePram" HorizontalAlignment="Left" VerticalAlignment="Bottom" ToolTip="显示获取参数" Margin="10,0,0,4" IsChecked="True" Click="togglePram_Click"/>
                    <Grid x:Name="grdParam" Margin="35,0,0,-1" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="0" Opacity="0">
                        <!--<TextBlock Text="关键词" HorizontalAlignment="Left" Margin="0" d:LayoutOverrides="Height" VerticalAlignment="Center" Style="{StaticResource glowT}"/>-->
                        <TextBlock x:Name="textBlock" Text="起始页码" HorizontalAlignment="Left" Margin="2,0,0,0" d:LayoutOverrides="Height" VerticalAlignment="Center" Style="{StaticResource glowT}"/>
                        <StackPanel x:Name="stackPanel" Orientation="Horizontal" Margin="55,0,0,0" ToolTip="起始页码" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <TextBox x:Name="txtPage" x:FieldModifier="private" Margin="5,5,0,4" Width="50" Text="1" InputMethod.IsInputMethodEnabled="False" PreviewKeyDown="txtPage_PreviewKeyDown" Style="{DynamicResource SimpleTextBox}" MaxLength="5" TextChanged="txtNum_TextChanged" LostFocus="txtPage_LostFocus"/>
                            <Button x:Name="pageUp" x:FieldModifier="private" Margin="0,5,0,4" Content="˄" Width="15" Style="{DynamicResource SimpleButton}" BorderThickness="1" Click="pageUp_Click" />
                            <Button x:Name="pageDown" x:FieldModifier="private" Margin="0,5,0,4"  Content="˅" Width="15" Style="{DynamicResource SimpleButton}" BorderThickness="1" Click="pageDown_Click" />
                        </StackPanel>
                        <TextBlock x:Name="textBlock1" Text="单页数量" Margin="150,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource glowT}"/>
                        <StackPanel x:Name="stackPanel1" Orientation="Horizontal" Width="100" HorizontalAlignment="Left" Margin="204,0,0,0" ToolTip="每一页的数量" VerticalAlignment="Center">
                            <TextBox x:Name="txtNum" x:FieldModifier="private" Margin="5,5,0,4" Width="50" Text="50" InputMethod.IsInputMethodEnabled="False" PreviewKeyDown="txtPage_PreviewKeyDown" Style="{DynamicResource SimpleTextBox}" MaxLength="3" TextChanged="txtNum_TextChanged" LostFocus="txtPage_LostFocus"/>
                            <Button x:Name="numUp" x:FieldModifier="private" Margin="0,5,0,4" Content="˄" Width="15" Style="{DynamicResource SimpleButton}" BorderThickness="1" Click="numUp_Click" />
                            <Button x:Name="numDown" x:FieldModifier="private" Margin="0,5,0,4"  Content="˅" Width="15" Style="{DynamicResource SimpleButton}" BorderThickness="1" Click="numDown_Click" />
                        </StackPanel>
                    </Grid>
                </Grid>
                 <Grid x:Name="logoGrd" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,0,0,0" Height="60">
                    <Image x:Name="image" Width="120" Height="60" Stretch="None" Margin="10,10,0,0" HorizontalAlignment="Left" RenderTransformOrigin="0.50,0.50" Source="Images/logo1.png" />
                    <Image Source="Images/logo3.png" Width="160" Height="60" Margin="110,10,0,0" HorizontalAlignment="Left"/>
                </Grid>
                <Border x:Name="bgLoading" Visibility="Hidden" Margin="-300,71,0,0" Width="300" Height="3" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Border.Background>
                        <LinearGradientBrush Opacity ="1" StartPoint ="0,0.5" EndPoint ="1,0.5">
                            <GradientStop Color ="#00FFFFFF" Offset ="0"/>
                            <GradientStop Color ="#FF3585e4" Offset ="0.5"/>
                            <GradientStop Color ="#00FFFFFF" Offset ="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
            </Grid>
            <Grid HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,9,150,0" >
                <TextBlock x:Name="txtSetting" Text="设置" Margin="0" FontSize="11" TextDecorations="Underline" Style="{StaticResource glowT}" MouseDown="TextBlock_MouseDown1" Cursor="Hand"/>
                <TextBlock Text="|" Margin="28,0,0,0" FontSize="11" Style="{StaticResource glowT}" />
                <TextBlock x:Name="txtHelp" Text="帮助" Margin="36,0,0,0" FontSize="11" TextDecorations="Underline" Style="{StaticResource glowT}" MouseDown="TextBlock_MouseDown2" Cursor="Hand"/>
            </Grid>
            
            <Border HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Background="#3585e4" Height="25" Margin="-3,0,-3,-3">
                <Grid>
                    <TextBlock Text="点击获取以取得最新图片，或使用关键词进行搜索" x:Name="statusText" Foreground="White" Margin="15,0,0,0" VerticalAlignment="Center" Style="{StaticResource glowT}" />
                    <TextBlock Text="当前站点 yande" x:Name="siteText" Foreground="White" Margin="0,0,290,0" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource glowT}" />
                    <TextBlock Text="当前页码 0" x:Name="pageText" Foreground="White" Margin="0,0,170,0" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource glowT}" />
                    <TextBlock Text="选中图片 0" x:Name="selText" Foreground="White" Margin="0,0,50,0" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource glowT}" />
                </Grid>
            </Border>
        </Grid>
    </Border>
</Window>